generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  name       String
  phone      String?   @unique
  email      String?   @unique
  created_at DateTime  @default(now())
  is_active  Boolean   @default(true)
  sessions   Session[]
}

model Game {
  id         Int         @id @default(autoincrement())
  is_active  Boolean     @default(true)
  created_at DateTime    @default(now())
  title      String
  prices     GamePrice[]
  sessions   Session[]
}

model GamePrice {
  id     Int    @id @default(autoincrement())
  name   String
  price  Int
  gameId Int
  game   Game   @relation(fields: [gameId], references: [id])
}

model Session {
  id                          Int              @id @default(autoincrement())
  user_id                     Int
  game_id                     Int
  start_time                  DateTime
  end_time                    DateTime?
  is_active                   Boolean          @default(true)
  created_at                  DateTime         @default(now())
  game_name                   String?
  game_rate                   Int?
  game_rate_type              String?
  bill_amount                 Int?
  bill_details                String?
  switch_pricing_at_6pm       Boolean          @default(false)
  game_rate_after_6pm         Int?
  game_rate_type_after_6pm    String?
  amount_after_6pm            Int?
  amount_before_6pm           Int?
  duration_after_6pm_seconds  Int?
  duration_before_6pm_seconds Int?
  extras_amount               Int              @default(0)
  has_dual_pricing            Boolean          @default(false)
  pricing_overlaps_6pm        Boolean          @default(false)
  game                        Game             @relation(fields: [game_id], references: [id])
  user                        User             @relation(fields: [user_id], references: [id])
  extras                      SessionProduct[]
}

model Product {
  id              String           @id @default(uuid())
  name            String           @unique
  price           Int
  is_active       Boolean          @default(true)
  created_at      DateTime         @default(now())
  sessionProducts SessionProduct[]
}

model SessionProduct {
  id          Int      @id @default(autoincrement())
  session_id  Int
  product_id  String
  quantity    Int
  total_price Int
  created_at  DateTime @default(now())
  product     Product  @relation(fields: [product_id], references: [id])
  session     Session  @relation(fields: [session_id], references: [id])
}
